package com.topline.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ItemReturnExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    public ItemReturnExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:04 EAT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andRtnIdIsNull() {
            addCriterion("rtn_id is null");
            return (Criteria) this;
        }

        public Criteria andRtnIdIsNotNull() {
            addCriterion("rtn_id is not null");
            return (Criteria) this;
        }

        public Criteria andRtnIdEqualTo(Integer value) {
            addCriterion("rtn_id =", value, "rtnId");
            return (Criteria) this;
        }

        public Criteria andRtnIdNotEqualTo(Integer value) {
            addCriterion("rtn_id <>", value, "rtnId");
            return (Criteria) this;
        }

        public Criteria andRtnIdGreaterThan(Integer value) {
            addCriterion("rtn_id >", value, "rtnId");
            return (Criteria) this;
        }

        public Criteria andRtnIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("rtn_id >=", value, "rtnId");
            return (Criteria) this;
        }

        public Criteria andRtnIdLessThan(Integer value) {
            addCriterion("rtn_id <", value, "rtnId");
            return (Criteria) this;
        }

        public Criteria andRtnIdLessThanOrEqualTo(Integer value) {
            addCriterion("rtn_id <=", value, "rtnId");
            return (Criteria) this;
        }

        public Criteria andRtnIdIn(List<Integer> values) {
            addCriterion("rtn_id in", values, "rtnId");
            return (Criteria) this;
        }

        public Criteria andRtnIdNotIn(List<Integer> values) {
            addCriterion("rtn_id not in", values, "rtnId");
            return (Criteria) this;
        }

        public Criteria andRtnIdBetween(Integer value1, Integer value2) {
            addCriterion("rtn_id between", value1, value2, "rtnId");
            return (Criteria) this;
        }

        public Criteria andRtnIdNotBetween(Integer value1, Integer value2) {
            addCriterion("rtn_id not between", value1, value2, "rtnId");
            return (Criteria) this;
        }

        public Criteria andRtnDateIsNull() {
            addCriterion("rtn_date is null");
            return (Criteria) this;
        }

        public Criteria andRtnDateIsNotNull() {
            addCriterion("rtn_date is not null");
            return (Criteria) this;
        }

        public Criteria andRtnDateEqualTo(Date value) {
            addCriterionForJDBCDate("rtn_date =", value, "rtnDate");
            return (Criteria) this;
        }

        public Criteria andRtnDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("rtn_date <>", value, "rtnDate");
            return (Criteria) this;
        }

        public Criteria andRtnDateGreaterThan(Date value) {
            addCriterionForJDBCDate("rtn_date >", value, "rtnDate");
            return (Criteria) this;
        }

        public Criteria andRtnDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("rtn_date >=", value, "rtnDate");
            return (Criteria) this;
        }

        public Criteria andRtnDateLessThan(Date value) {
            addCriterionForJDBCDate("rtn_date <", value, "rtnDate");
            return (Criteria) this;
        }

        public Criteria andRtnDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("rtn_date <=", value, "rtnDate");
            return (Criteria) this;
        }

        public Criteria andRtnDateIn(List<Date> values) {
            addCriterionForJDBCDate("rtn_date in", values, "rtnDate");
            return (Criteria) this;
        }

        public Criteria andRtnDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("rtn_date not in", values, "rtnDate");
            return (Criteria) this;
        }

        public Criteria andRtnDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("rtn_date between", value1, value2, "rtnDate");
            return (Criteria) this;
        }

        public Criteria andRtnDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("rtn_date not between", value1, value2, "rtnDate");
            return (Criteria) this;
        }

        public Criteria andRtnStatusIsNull() {
            addCriterion("rtn_status is null");
            return (Criteria) this;
        }

        public Criteria andRtnStatusIsNotNull() {
            addCriterion("rtn_status is not null");
            return (Criteria) this;
        }

        public Criteria andRtnStatusEqualTo(String value) {
            addCriterion("rtn_status =", value, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusNotEqualTo(String value) {
            addCriterion("rtn_status <>", value, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusGreaterThan(String value) {
            addCriterion("rtn_status >", value, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusGreaterThanOrEqualTo(String value) {
            addCriterion("rtn_status >=", value, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusLessThan(String value) {
            addCriterion("rtn_status <", value, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusLessThanOrEqualTo(String value) {
            addCriterion("rtn_status <=", value, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusLike(String value) {
            addCriterion("rtn_status like", value, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusNotLike(String value) {
            addCriterion("rtn_status not like", value, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusIn(List<String> values) {
            addCriterion("rtn_status in", values, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusNotIn(List<String> values) {
            addCriterion("rtn_status not in", values, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusBetween(String value1, String value2) {
            addCriterion("rtn_status between", value1, value2, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnStatusNotBetween(String value1, String value2) {
            addCriterion("rtn_status not between", value1, value2, "rtnStatus");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByIsNull() {
            addCriterion("rtn_captured_by is null");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByIsNotNull() {
            addCriterion("rtn_captured_by is not null");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByEqualTo(String value) {
            addCriterion("rtn_captured_by =", value, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByNotEqualTo(String value) {
            addCriterion("rtn_captured_by <>", value, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByGreaterThan(String value) {
            addCriterion("rtn_captured_by >", value, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByGreaterThanOrEqualTo(String value) {
            addCriterion("rtn_captured_by >=", value, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByLessThan(String value) {
            addCriterion("rtn_captured_by <", value, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByLessThanOrEqualTo(String value) {
            addCriterion("rtn_captured_by <=", value, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByLike(String value) {
            addCriterion("rtn_captured_by like", value, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByNotLike(String value) {
            addCriterion("rtn_captured_by not like", value, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByIn(List<String> values) {
            addCriterion("rtn_captured_by in", values, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByNotIn(List<String> values) {
            addCriterion("rtn_captured_by not in", values, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByBetween(String value1, String value2) {
            addCriterion("rtn_captured_by between", value1, value2, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedByNotBetween(String value1, String value2) {
            addCriterion("rtn_captured_by not between", value1, value2, "rtnCapturedBy");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnIsNull() {
            addCriterion("rtn_captured_on is null");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnIsNotNull() {
            addCriterion("rtn_captured_on is not null");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnEqualTo(Date value) {
            addCriterion("rtn_captured_on =", value, "rtnCapturedOn");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnNotEqualTo(Date value) {
            addCriterion("rtn_captured_on <>", value, "rtnCapturedOn");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnGreaterThan(Date value) {
            addCriterion("rtn_captured_on >", value, "rtnCapturedOn");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnGreaterThanOrEqualTo(Date value) {
            addCriterion("rtn_captured_on >=", value, "rtnCapturedOn");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnLessThan(Date value) {
            addCriterion("rtn_captured_on <", value, "rtnCapturedOn");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnLessThanOrEqualTo(Date value) {
            addCriterion("rtn_captured_on <=", value, "rtnCapturedOn");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnIn(List<Date> values) {
            addCriterion("rtn_captured_on in", values, "rtnCapturedOn");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnNotIn(List<Date> values) {
            addCriterion("rtn_captured_on not in", values, "rtnCapturedOn");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnBetween(Date value1, Date value2) {
            addCriterion("rtn_captured_on between", value1, value2, "rtnCapturedOn");
            return (Criteria) this;
        }

        public Criteria andRtnCapturedOnNotBetween(Date value1, Date value2) {
            addCriterion("rtn_captured_on not between", value1, value2, "rtnCapturedOn");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table inv_returns
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 01 16:35:05 EAT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table inv_returns
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}