package com.topline.model;

import java.util.ArrayList;
import java.util.List;

public class LocationsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public LocationsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLocCodeIsNull() {
            addCriterion("loc_code is null");
            return (Criteria) this;
        }

        public Criteria andLocCodeIsNotNull() {
            addCriterion("loc_code is not null");
            return (Criteria) this;
        }

        public Criteria andLocCodeEqualTo(Integer value) {
            addCriterion("loc_code =", value, "locCode");
            return (Criteria) this;
        }

        public Criteria andLocCodeNotEqualTo(Integer value) {
            addCriterion("loc_code <>", value, "locCode");
            return (Criteria) this;
        }

        public Criteria andLocCodeGreaterThan(Integer value) {
            addCriterion("loc_code >", value, "locCode");
            return (Criteria) this;
        }

        public Criteria andLocCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("loc_code >=", value, "locCode");
            return (Criteria) this;
        }

        public Criteria andLocCodeLessThan(Integer value) {
            addCriterion("loc_code <", value, "locCode");
            return (Criteria) this;
        }

        public Criteria andLocCodeLessThanOrEqualTo(Integer value) {
            addCriterion("loc_code <=", value, "locCode");
            return (Criteria) this;
        }

        public Criteria andLocCodeIn(List<Integer> values) {
            addCriterion("loc_code in", values, "locCode");
            return (Criteria) this;
        }

        public Criteria andLocCodeNotIn(List<Integer> values) {
            addCriterion("loc_code not in", values, "locCode");
            return (Criteria) this;
        }

        public Criteria andLocCodeBetween(Integer value1, Integer value2) {
            addCriterion("loc_code between", value1, value2, "locCode");
            return (Criteria) this;
        }

        public Criteria andLocCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("loc_code not between", value1, value2, "locCode");
            return (Criteria) this;
        }

        public Criteria andLocShtDescIsNull() {
            addCriterion("loc_sht_desc is null");
            return (Criteria) this;
        }

        public Criteria andLocShtDescIsNotNull() {
            addCriterion("loc_sht_desc is not null");
            return (Criteria) this;
        }

        public Criteria andLocShtDescEqualTo(String value) {
            addCriterion("loc_sht_desc =", value, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescNotEqualTo(String value) {
            addCriterion("loc_sht_desc <>", value, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescGreaterThan(String value) {
            addCriterion("loc_sht_desc >", value, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescGreaterThanOrEqualTo(String value) {
            addCriterion("loc_sht_desc >=", value, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescLessThan(String value) {
            addCriterion("loc_sht_desc <", value, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescLessThanOrEqualTo(String value) {
            addCriterion("loc_sht_desc <=", value, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescLike(String value) {
            addCriterion("loc_sht_desc like", value, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescNotLike(String value) {
            addCriterion("loc_sht_desc not like", value, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescIn(List<String> values) {
            addCriterion("loc_sht_desc in", values, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescNotIn(List<String> values) {
            addCriterion("loc_sht_desc not in", values, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescBetween(String value1, String value2) {
            addCriterion("loc_sht_desc between", value1, value2, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocShtDescNotBetween(String value1, String value2) {
            addCriterion("loc_sht_desc not between", value1, value2, "locShtDesc");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionIsNull() {
            addCriterion("loc_description is null");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionIsNotNull() {
            addCriterion("loc_description is not null");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionEqualTo(String value) {
            addCriterion("loc_description =", value, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionNotEqualTo(String value) {
            addCriterion("loc_description <>", value, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionGreaterThan(String value) {
            addCriterion("loc_description >", value, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("loc_description >=", value, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionLessThan(String value) {
            addCriterion("loc_description <", value, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionLessThanOrEqualTo(String value) {
            addCriterion("loc_description <=", value, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionLike(String value) {
            addCriterion("loc_description like", value, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionNotLike(String value) {
            addCriterion("loc_description not like", value, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionIn(List<String> values) {
            addCriterion("loc_description in", values, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionNotIn(List<String> values) {
            addCriterion("loc_description not in", values, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionBetween(String value1, String value2) {
            addCriterion("loc_description between", value1, value2, "locDescription");
            return (Criteria) this;
        }

        public Criteria andLocDescriptionNotBetween(String value1, String value2) {
            addCriterion("loc_description not between", value1, value2, "locDescription");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table inv_locations
     *
     * @mbggenerated do_not_delete_during_merge Wed May 13 15:02:10 EAT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table inv_locations
     *
     * @mbggenerated Wed May 13 15:02:10 EAT 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}