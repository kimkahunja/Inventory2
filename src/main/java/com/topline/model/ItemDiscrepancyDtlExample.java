package com.topline.model;

import java.util.ArrayList;
import java.util.List;

public class ItemDiscrepancyDtlExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public ItemDiscrepancyDtlExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDscdIdIsNull() {
            addCriterion("dscd_id is null");
            return (Criteria) this;
        }

        public Criteria andDscdIdIsNotNull() {
            addCriterion("dscd_id is not null");
            return (Criteria) this;
        }

        public Criteria andDscdIdEqualTo(Integer value) {
            addCriterion("dscd_id =", value, "dscdId");
            return (Criteria) this;
        }

        public Criteria andDscdIdNotEqualTo(Integer value) {
            addCriterion("dscd_id <>", value, "dscdId");
            return (Criteria) this;
        }

        public Criteria andDscdIdGreaterThan(Integer value) {
            addCriterion("dscd_id >", value, "dscdId");
            return (Criteria) this;
        }

        public Criteria andDscdIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("dscd_id >=", value, "dscdId");
            return (Criteria) this;
        }

        public Criteria andDscdIdLessThan(Integer value) {
            addCriterion("dscd_id <", value, "dscdId");
            return (Criteria) this;
        }

        public Criteria andDscdIdLessThanOrEqualTo(Integer value) {
            addCriterion("dscd_id <=", value, "dscdId");
            return (Criteria) this;
        }

        public Criteria andDscdIdIn(List<Integer> values) {
            addCriterion("dscd_id in", values, "dscdId");
            return (Criteria) this;
        }

        public Criteria andDscdIdNotIn(List<Integer> values) {
            addCriterion("dscd_id not in", values, "dscdId");
            return (Criteria) this;
        }

        public Criteria andDscdIdBetween(Integer value1, Integer value2) {
            addCriterion("dscd_id between", value1, value2, "dscdId");
            return (Criteria) this;
        }

        public Criteria andDscdIdNotBetween(Integer value1, Integer value2) {
            addCriterion("dscd_id not between", value1, value2, "dscdId");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdIsNull() {
            addCriterion("dscd_dsc_id is null");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdIsNotNull() {
            addCriterion("dscd_dsc_id is not null");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdEqualTo(Integer value) {
            addCriterion("dscd_dsc_id =", value, "dscdDscId");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdNotEqualTo(Integer value) {
            addCriterion("dscd_dsc_id <>", value, "dscdDscId");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdGreaterThan(Integer value) {
            addCriterion("dscd_dsc_id >", value, "dscdDscId");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("dscd_dsc_id >=", value, "dscdDscId");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdLessThan(Integer value) {
            addCriterion("dscd_dsc_id <", value, "dscdDscId");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdLessThanOrEqualTo(Integer value) {
            addCriterion("dscd_dsc_id <=", value, "dscdDscId");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdIn(List<Integer> values) {
            addCriterion("dscd_dsc_id in", values, "dscdDscId");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdNotIn(List<Integer> values) {
            addCriterion("dscd_dsc_id not in", values, "dscdDscId");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdBetween(Integer value1, Integer value2) {
            addCriterion("dscd_dsc_id between", value1, value2, "dscdDscId");
            return (Criteria) this;
        }

        public Criteria andDscdDscIdNotBetween(Integer value1, Integer value2) {
            addCriterion("dscd_dsc_id not between", value1, value2, "dscdDscId");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeIsNull() {
            addCriterion("dscd_pdt_code is null");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeIsNotNull() {
            addCriterion("dscd_pdt_code is not null");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeEqualTo(Integer value) {
            addCriterion("dscd_pdt_code =", value, "dscdPdtCode");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeNotEqualTo(Integer value) {
            addCriterion("dscd_pdt_code <>", value, "dscdPdtCode");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeGreaterThan(Integer value) {
            addCriterion("dscd_pdt_code >", value, "dscdPdtCode");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("dscd_pdt_code >=", value, "dscdPdtCode");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeLessThan(Integer value) {
            addCriterion("dscd_pdt_code <", value, "dscdPdtCode");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeLessThanOrEqualTo(Integer value) {
            addCriterion("dscd_pdt_code <=", value, "dscdPdtCode");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeIn(List<Integer> values) {
            addCriterion("dscd_pdt_code in", values, "dscdPdtCode");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeNotIn(List<Integer> values) {
            addCriterion("dscd_pdt_code not in", values, "dscdPdtCode");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeBetween(Integer value1, Integer value2) {
            addCriterion("dscd_pdt_code between", value1, value2, "dscdPdtCode");
            return (Criteria) this;
        }

        public Criteria andDscdPdtCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("dscd_pdt_code not between", value1, value2, "dscdPdtCode");
            return (Criteria) this;
        }

        public Criteria andDscdQtyIsNull() {
            addCriterion("dscd_qty is null");
            return (Criteria) this;
        }

        public Criteria andDscdQtyIsNotNull() {
            addCriterion("dscd_qty is not null");
            return (Criteria) this;
        }

        public Criteria andDscdQtyEqualTo(Double value) {
            addCriterion("dscd_qty =", value, "dscdQty");
            return (Criteria) this;
        }

        public Criteria andDscdQtyNotEqualTo(Double value) {
            addCriterion("dscd_qty <>", value, "dscdQty");
            return (Criteria) this;
        }

        public Criteria andDscdQtyGreaterThan(Double value) {
            addCriterion("dscd_qty >", value, "dscdQty");
            return (Criteria) this;
        }

        public Criteria andDscdQtyGreaterThanOrEqualTo(Double value) {
            addCriterion("dscd_qty >=", value, "dscdQty");
            return (Criteria) this;
        }

        public Criteria andDscdQtyLessThan(Double value) {
            addCriterion("dscd_qty <", value, "dscdQty");
            return (Criteria) this;
        }

        public Criteria andDscdQtyLessThanOrEqualTo(Double value) {
            addCriterion("dscd_qty <=", value, "dscdQty");
            return (Criteria) this;
        }

        public Criteria andDscdQtyIn(List<Double> values) {
            addCriterion("dscd_qty in", values, "dscdQty");
            return (Criteria) this;
        }

        public Criteria andDscdQtyNotIn(List<Double> values) {
            addCriterion("dscd_qty not in", values, "dscdQty");
            return (Criteria) this;
        }

        public Criteria andDscdQtyBetween(Double value1, Double value2) {
            addCriterion("dscd_qty between", value1, value2, "dscdQty");
            return (Criteria) this;
        }

        public Criteria andDscdQtyNotBetween(Double value1, Double value2) {
            addCriterion("dscd_qty not between", value1, value2, "dscdQty");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 01 16:35:05 EAT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table inv_discrepancies_dtls
     *
     * @mbggenerated Mon Aug 01 16:35:05 EAT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}